{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Covid-19 infección en Ecuador. Modelos probabilisticos\n",
    "Implementacion de un modelo probabilistico de infección por el virus Covid-19\n",
    "\n",
    "Se realiza un análisis probabilistico simple del crecimiento de la infección en Python y el modelos para comprender mejor la evolución de la infección.\n",
    "\n",
    "Se crea modelos de series temporales del número total de personas infectadas hasta la fecha (es decir, las personas realmente infectadas más las personas que han sido infectadas). Estos modelos tienen parámetros , que se estimarán por ajuste de probabilidad."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 265,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Importar las librerias para el analasis\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "from datetime import datetime,timedelta\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.optimize import fsolve\n",
    "from sklearn import linear_model\n",
    "from datetime import datetime,timedelta\n",
    "from sklearn.metrics import mean_squared_error\n",
    "from scipy.optimize import curve_fit\n",
    "from scipy.optimize import fsolve\n",
    "from sklearn import linear_model\n",
    "import matplotlib.pyplot as plt\n",
    "from sklearn.linear_model import LinearRegression \n",
    "from sklearn.preprocessing import PolynomialFeatures \n",
    "from scipy.optimize import minimize\n",
    "from scipy.integrate import solve_ivp\n",
    "from time import time\n",
    "from scipy.integrate import odeint\n",
    "%matplotlib inline\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 266,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>World</th>\n",
       "      <th>Afghanistan</th>\n",
       "      <th>Albania</th>\n",
       "      <th>Algeria</th>\n",
       "      <th>Andorra</th>\n",
       "      <th>Angola</th>\n",
       "      <th>Anguilla</th>\n",
       "      <th>Antigua and Barbuda</th>\n",
       "      <th>Argentina</th>\n",
       "      <th>...</th>\n",
       "      <th>United States</th>\n",
       "      <th>United States Virgin Islands</th>\n",
       "      <th>Uruguay</th>\n",
       "      <th>Uzbekistan</th>\n",
       "      <th>Vatican</th>\n",
       "      <th>Venezuela</th>\n",
       "      <th>Vietnam</th>\n",
       "      <th>Yemen</th>\n",
       "      <th>Zambia</th>\n",
       "      <th>Zimbabwe</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>2019-12-31</td>\n",
       "      <td>27</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2020-01-01</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2020-01-02</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2020-01-03</td>\n",
       "      <td>17</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>2020-01-04</td>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>0.0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>2020-04-20</td>\n",
       "      <td>74142</td>\n",
       "      <td>88.0</td>\n",
       "      <td>14.0</td>\n",
       "      <td>94.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>102.0</td>\n",
       "      <td>...</td>\n",
       "      <td>24601</td>\n",
       "      <td>0.0</td>\n",
       "      <td>11.0</td>\n",
       "      <td>70.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>2020-04-21</td>\n",
       "      <td>77274</td>\n",
       "      <td>35.0</td>\n",
       "      <td>22.0</td>\n",
       "      <td>89.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>90.0</td>\n",
       "      <td>...</td>\n",
       "      <td>28065</td>\n",
       "      <td>1.0</td>\n",
       "      <td>7.0</td>\n",
       "      <td>92.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>4.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>2020-04-22</td>\n",
       "      <td>87387</td>\n",
       "      <td>61.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>93.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>112.0</td>\n",
       "      <td>...</td>\n",
       "      <td>37289</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>35.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>2020-04-23</td>\n",
       "      <td>67629</td>\n",
       "      <td>84.0</td>\n",
       "      <td>25.0</td>\n",
       "      <td>99.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>144.0</td>\n",
       "      <td>...</td>\n",
       "      <td>17588</td>\n",
       "      <td>0.0</td>\n",
       "      <td>6.0</td>\n",
       "      <td>24.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>9.0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>2020-04-24</td>\n",
       "      <td>80071</td>\n",
       "      <td>105.0</td>\n",
       "      <td>29.0</td>\n",
       "      <td>97.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>1.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>147.0</td>\n",
       "      <td>...</td>\n",
       "      <td>26543</td>\n",
       "      <td>0.0</td>\n",
       "      <td>8.0</td>\n",
       "      <td>62.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>10.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>0.0</td>\n",
       "      <td>2.0</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>116 rows × 208 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "           date  World  Afghanistan  Albania  Algeria  Andorra  Angola  \\\n",
       "0    2019-12-31     27          0.0      NaN      0.0      NaN     NaN   \n",
       "1    2020-01-01      0          0.0      NaN      0.0      NaN     NaN   \n",
       "2    2020-01-02      0          0.0      NaN      0.0      NaN     NaN   \n",
       "3    2020-01-03     17          0.0      NaN      0.0      NaN     NaN   \n",
       "4    2020-01-04      0          0.0      NaN      0.0      NaN     NaN   \n",
       "..          ...    ...          ...      ...      ...      ...     ...   \n",
       "111  2020-04-20  74142         88.0     14.0     94.0      9.0     0.0   \n",
       "112  2020-04-21  77274         35.0     22.0     89.0      4.0     0.0   \n",
       "113  2020-04-22  87387         61.0     25.0     93.0      0.0     0.0   \n",
       "114  2020-04-23  67629         84.0     25.0     99.0      6.0     0.0   \n",
       "115  2020-04-24  80071        105.0     29.0     97.0      1.0     1.0   \n",
       "\n",
       "     Anguilla  Antigua and Barbuda  Argentina  ...  United States  \\\n",
       "0         NaN                  NaN        NaN  ...              0   \n",
       "1         NaN                  NaN        NaN  ...              0   \n",
       "2         NaN                  NaN        NaN  ...              0   \n",
       "3         NaN                  NaN        NaN  ...              0   \n",
       "4         NaN                  NaN        NaN  ...              0   \n",
       "..        ...                  ...        ...  ...            ...   \n",
       "111       0.0                  0.0      102.0  ...          24601   \n",
       "112       0.0                  0.0       90.0  ...          28065   \n",
       "113       0.0                  1.0      112.0  ...          37289   \n",
       "114       0.0                  0.0      144.0  ...          17588   \n",
       "115       0.0                  0.0      147.0  ...          26543   \n",
       "\n",
       "     United States Virgin Islands  Uruguay  Uzbekistan  Vatican  Venezuela  \\\n",
       "0                             NaN      NaN         NaN      NaN        NaN   \n",
       "1                             NaN      NaN         NaN      NaN        NaN   \n",
       "2                             NaN      NaN         NaN      NaN        NaN   \n",
       "3                             NaN      NaN         NaN      NaN        NaN   \n",
       "4                             NaN      NaN         NaN      NaN        NaN   \n",
       "..                            ...      ...         ...      ...        ...   \n",
       "111                           0.0     11.0        70.0      0.0       29.0   \n",
       "112                           1.0      7.0        92.0      1.0        0.0   \n",
       "113                           0.0      8.0        35.0      0.0       29.0   \n",
       "114                           0.0      6.0        24.0      0.0        3.0   \n",
       "115                           0.0      8.0        62.0      0.0       10.0   \n",
       "\n",
       "     Vietnam  Yemen  Zambia  Zimbabwe  \n",
       "0        0.0    NaN     NaN       NaN  \n",
       "1        0.0    NaN     NaN       NaN  \n",
       "2        0.0    NaN     NaN       NaN  \n",
       "3        0.0    NaN     NaN       NaN  \n",
       "4        0.0    NaN     NaN       NaN  \n",
       "..       ...    ...     ...       ...  \n",
       "111      0.0    0.0     4.0       0.0  \n",
       "112      0.0    0.0     4.0       0.0  \n",
       "113      0.0    0.0     0.0       3.0  \n",
       "114      0.0    0.0     9.0       0.0  \n",
       "115      0.0    0.0     2.0       1.0  \n",
       "\n",
       "[116 rows x 208 columns]"
      ]
     },
     "execution_count": 266,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Actualizar los datos (URL)\n",
    "url = 'https://covid.ourworldindata.org/data/ecdc/new_cases.csv'\n",
    "df = pd.read_csv(url)\n",
    "df"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Imprimos los resultados y agregamos el numero del dia\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 267,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>date</th>\n",
       "      <th>Ecuador</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>-1</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>1</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>2</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>3</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>111</th>\n",
       "      <td>110</td>\n",
       "      <td>446.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>112</th>\n",
       "      <td>111</td>\n",
       "      <td>660.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>113</th>\n",
       "      <td>112</td>\n",
       "      <td>270.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>114</th>\n",
       "      <td>113</td>\n",
       "      <td>452.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>115</th>\n",
       "      <td>114</td>\n",
       "      <td>333.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>116 rows × 2 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     date  Ecuador\n",
       "0      -1      0.0\n",
       "1       0      0.0\n",
       "2       1      0.0\n",
       "3       2      0.0\n",
       "4       3      0.0\n",
       "..    ...      ...\n",
       "111   110    446.0\n",
       "112   111    660.0\n",
       "113   112    270.0\n",
       "114   113    452.0\n",
       "115   114    333.0\n",
       "\n",
       "[116 rows x 2 columns]"
      ]
     },
     "execution_count": 267,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = df.loc[:,['date','Ecuador']] #Selecciono las columnas de analasis\n",
    "# Expresar las fechas en numero de dias desde el 01 Enero\n",
    "FMT = '%Y-%m-%d'\n",
    "date = df['date']\n",
    "df['date'] = date.map(lambda x : (datetime.strptime(x, FMT) - datetime.strptime(\"2020-01-01\", FMT)).days)\n",
    "df"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 268,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x120cc4c70>"
      ]
     },
     "execution_count": 268,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df.plot(x ='date', y='Ecuador')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Ahora podemos analizar un modelo probabilisto para el examen.\n",
    "\n",
    "## El modelo basado en probabilidad\n",
    "\n",
    "Para realizar un estimacion del factor de crecimiento de los casos de Covid 19 en Ecuador calculamos la mediana, con esto obtenemo el valor medio de crecimiento de un conjunto de datos, con esto podemos obtener un factor de crecimiento o taza de crecimiento de los nuevos casos.\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 269,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "155.0\n",
      "223.66\n"
     ]
    }
   ],
   "source": [
    "filtro = df[\"Ecuador\"][61:] # Filtro los datos que se empezo a tener casos\n",
    "#Obtenemos la mediana\n",
    "media = filtro.mean()\n",
    "mediana = filtro.median()\n",
    "print(mediana)\n",
    "print(media)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "De la ecuación de la recta y = mX + b nuestra pendiente «m» es el coeficiente y el término independiente «b»\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 270,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "11338\n",
      "116\n",
      "116\n"
     ]
    }
   ],
   "source": [
    "#Vamos a comprobar:\n",
    "# según la media y la mediana podemos obtener la taza de crecieminto y predicir su comportamiento.\n",
    "# Cargamos los datos de total de casos\n",
    "url = 'https://covid.ourworldindata.org/data/ecdc/total_cases.csv'\n",
    "df_t = pd.read_csv(url)\n",
    "FMT = '%Y-%m-%d'\n",
    "date = df_t['date']\n",
    "df_t['date'] = date.map(lambda x : (datetime.strptime(x, FMT) - datetime.strptime(\"2020-01-01\", FMT)).days)\n",
    "df_t = df_t.loc[:,['date','Ecuador']] #Selecciono las columnas de analasis\n",
    "y = list(df_t.iloc [:, 1]) # Total casos\n",
    "x = list(df_t.iloc [:, 0]) # Dias\n",
    "x_resp = x\n",
    "y_resp = y\n",
    "#Realizamos un ejemplo de prediccion\n",
    "prediccion_siguiente = int(y[-1] + mediana)\n",
    "print(prediccion_siguiente)\n",
    "aux = len(x)\n",
    "print(len(x))\n",
    "print(len(y))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 271,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "127\n",
      "127\n"
     ]
    }
   ],
   "source": [
    "# Quiero predecir cuántos \"Casos\" voy a obtener de aqui a 10 dias.\n",
    "for i in range(x[-1], x[-1]+11):\n",
    "    x.append(i)\n",
    "    y.append(int(y[-1] + mediana))\n",
    "plt.plot(x[61:], y[61:])\n",
    "plt.show()\n",
    "print(len(x))\n",
    "print(len(y))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Practica\n",
    "\n",
    "1. Comparar el modelo de predicion matematico vs probabilidad.\n",
    "2. Generar el SIR en base al modelo de probabilidad y obtener beta y gamma con una semana de prediccion.\n",
    "3. Retroceder un semana y comparar el modelo matematico vs probabilidad vs reales. Solo cargan los datos para generar los modelos menos 7 dias.\n",
    "\n",
    "Puntos extras: Investigas sobre la correlacion de variables y aplicar el calculo en base a los datos del Ecuador."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "#### -- Para este punto(Correlacion) consideraremos las variables de dias, resultado de modelo matematico y resultado de modelo probabilistico\n",
    "\n",
    "### Teoria\n",
    "**En estadística, el coeficiente de correlación de Pearson es una medida lineal entre dos variables aleatorias cuantitativas. A diferencia de la covarianza, la correlación de Pearson es independiente de la escala de medida de las variables.**\n",
    "\n",
    "**De manera menos formal, podemos definir el coeficiente de correlación de Pearson como un índice que puede utilizarse para medir el grado de relación de dos variables siempre y cuando ambas sean cuantitativas y continuas.**\n",
    "### Interpretacion\n",
    "**El valor del índice de correlación varía en el intervalo [-1,1], indicando el signo el sentido de la relación:**\n",
    "\n",
    "**--Si r = 1, existe una correlación positiva perfecta. El índice indica una dependencia total entre las dos variables denominada relación directa: cuando una de ellas aumenta, la otra también lo hace en proporción constante.**\n",
    "\n",
    "**--Si 0 < r < 1, existe una correlación positiva.**\n",
    "\n",
    "**--Si r = 0, no existe relación lineal. Pero esto no necesariamente implica que las variables son independientes: pueden existir todavía relaciones no lineales entre las dos variables.**\n",
    "\n",
    "**--Si -1 < r < 0, existe una correlación negativa.**\n",
    "\n",
    "**--Si r = -1, existe una correlación negativa perfecta. El índice indica una dependencia total entre las dos variables llamada relación inversa: cuando una de ellas aumenta, la otra disminuye en proporción constante.**"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 1. Comparar el modelo de predicion matematico vs probabilidad"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 275,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/erleo15/anaconda3/anaconda3/envs/simulacion/lib/python3.8/site-packages/numpy/lib/polynomial.py:629: RuntimeWarning: overflow encountered in multiply\n",
      "  scale = NX.sqrt((lhs*lhs).sum(axis=0))\n",
      "/Users/erleo15/anaconda3/anaconda3/envs/simulacion/lib/python3.8/site-packages/numpy/core/_methods.py:38: RuntimeWarning: overflow encountered in reduce\n",
      "  return umr_sum(a, axis, dtype, out, keepdims, initial, where)\n",
      "/Users/erleo15/anaconda3/anaconda3/envs/simulacion/lib/python3.8/site-packages/IPython/core/interactiveshell.py:3331: RankWarning: Polyfit may be poorly conditioned\n",
      "  exec(code_obj, self.user_global_ns, self.user_ns)\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "<Figure size 432x288 with 0 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x1440 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    " \n",
    "for i in range(len(y)):\n",
    "    if str(y[i]) == \"nan\":\n",
    "        y[i]=0 \n",
    "x_m = x[:]\n",
    "y_m = y[:]\n",
    "# Modelo polinomial\n",
    "grado = len(x)\n",
    "\n",
    "poli = pd.DataFrame(columns=('Días', 'Polinomial')) \n",
    "y_pol = np.poly1d(np.polyfit(x_m,y_m,grado))\n",
    "\n",
    "# Asignación de valores a la variable dependiente según la ecuación anterior\n",
    "for pred in x_matematico: \n",
    "    poli.loc[len(poli)] = [pred, y_pol(pred)]\n",
    "\n",
    "\n",
    "##modelo probabilistico \n",
    "fig = plt.figure(facecolor='w') \n",
    "fig = plt.figure(figsize=(15, 20))\n",
    "ax = fig.add_subplot(111,  axisbelow=True)\n",
    "ax.plot(list(df_t.iloc [:, 0]), list(df_t.iloc [:, 1]), 'y+', label='Datos reales')\n",
    "ax.plot(poli.loc[:,'Días'], poli.loc[:,'Polinomial'], 'g', label='Modelo polinomial')\n",
    "ax.plot(poli.iloc[len(x)-10:,0],poli.iloc[len(x)-10:,1], 'r' , label='Modelo polinomial (Predicción)')\n",
    "ax.plot(x, y, 'b', label='Modelo Probabilidad')\n",
    "ax.plot(x[len(x)-10:], y[len(y)-10:], 'm', label='Modelo Probabilidad(Prediccion)')\n",
    "ax.set_ylim([-1,16000])\n",
    "ax.set_xlim([54,130])\n",
    "ax.set_xlabel('Tiempo en dias')\n",
    "ax.set_ylabel('Numero de Personas')\n",
    "ax.set_title(\"Modelo polinomial\")\n",
    "ax.legend()\n",
    "ax.grid(True) \n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Variable de Correlacion para prediccion de 10 dias\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 277,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Dias</th>\n",
       "      <th>Polinomial</th>\n",
       "      <th>Probabilistico</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>-20.617152</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>43.147112</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>8.152732</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>-24.517644</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>-29.850710</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>122</th>\n",
       "      <td>123</td>\n",
       "      <td>12178.887610</td>\n",
       "      <td>12268.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>123</th>\n",
       "      <td>124</td>\n",
       "      <td>12540.072029</td>\n",
       "      <td>12423.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>124</th>\n",
       "      <td>125</td>\n",
       "      <td>12522.141285</td>\n",
       "      <td>12578.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>125</th>\n",
       "      <td>126</td>\n",
       "      <td>12745.687732</td>\n",
       "      <td>12733.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>126</th>\n",
       "      <td>127</td>\n",
       "      <td>12886.883332</td>\n",
       "      <td>12888.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>127 rows × 3 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "     Dias    Polinomial  Probabilistico\n",
       "0       1    -20.617152             0.0\n",
       "1       2     43.147112             0.0\n",
       "2       3      8.152732             0.0\n",
       "3       4    -24.517644             0.0\n",
       "4       5    -29.850710             0.0\n",
       "..    ...           ...             ...\n",
       "122   123  12178.887610         12268.0\n",
       "123   124  12540.072029         12423.0\n",
       "124   125  12522.141285         12578.0\n",
       "125   126  12745.687732         12733.0\n",
       "126   127  12886.883332         12888.0\n",
       "\n",
       "[127 rows x 3 columns]"
      ]
     },
     "execution_count": 277,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##Variables de correlacion\n",
    "\n",
    "y= np.array(y)\n",
    "x= np.array(x) \n",
    "df_dias = pd.DataFrame(range(1,len(x)+1),columns = [\"Dias\"]) \n",
    "df_pol = pd.DataFrame(poli.loc[:,'Polinomial'])\n",
    "df_prob = pd.DataFrame(y, columns = [\"Probabilistico\"])\n",
    "dfd = pd.concat([df_dias, df_pol, df_prob], axis=1) \n",
    "dfd\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 278,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Dias</th>\n",
       "      <th>Polinomial</th>\n",
       "      <th>Probabilistico</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Dias</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.784837</td>\n",
       "      <td>0.784368</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Polinomial</th>\n",
       "      <td>0.784837</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.999390</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Probabilistico</th>\n",
       "      <td>0.784368</td>\n",
       "      <td>0.999390</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    Dias  Polinomial  Probabilistico\n",
       "Dias            1.000000    0.784837        0.784368\n",
       "Polinomial      0.784837    1.000000        0.999390\n",
       "Probabilistico  0.784368    0.999390        1.000000"
      ]
     },
     "execution_count": 278,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##Calculamos la variable de correlacion para las variables ingresadas\n",
    "correlacion = dfd.corr(method=\"pearson\")\n",
    "correlacion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 279,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.image.AxesImage at 0x120fa44c0>"
      ]
     },
     "execution_count": 279,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 288x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.matshow(correlacion)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 280,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x121808880>]"
      ]
     },
     "execution_count": 280,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(dfd[\"Probabilistico\"],dfd[\"Dias\"],\"r+\")\n",
    "plt.plot(dfd[\"Polinomial\"],dfd[\"Dias\"],\"b+\")"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 2. Generar el SIR en base al modelo de probabilidad y obtener beta y gamma con una semana prediccion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 281,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Start time: 2020-04-25 04:28:41.360984\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Beta: 0.0001000000 \n",
      "Gamma: 0.4000000000 \n",
      "Elapsed time: 0.0180109660 seconds.\n"
     ]
    }
   ],
   "source": [
    "x =  list(df_t.iloc [:, 0])\n",
    "y =  list(df_t.iloc [:, 1])\n",
    "\n",
    "# Quiero predecir cuántos \"Casos\" voy a obtener de aqui a 7 dias.\n",
    "for i in range(x[-1], x[-1]+7):\n",
    "    x.append(i)\n",
    "    y.append(int(y[-1] + mediana))\n",
    "\n",
    "    \n",
    "################################\n",
    "######## Es Mio ################\n",
    "################################\n",
    "\n",
    "\n",
    "\n",
    " \n",
    "start_time = time()\n",
    "print(\"Start time: \"+str(datetime.now()))\n",
    "\n",
    "def fx(point, data):\n",
    "    size = len(data)\n",
    "    beta, gamma = point\n",
    "    def SIR(t, y):\n",
    "        S = y[0]\n",
    "        I = y[1]\n",
    "        R = y[2]\n",
    "        return [-beta*S*I, beta*S*I-gamma*I, gamma*I]\n",
    "    solution = solve_ivp(SIR, [0, size], [S0,I0,R0], t_eval=np.arange(0, size, 1), vectorized=True)\n",
    "    return np.sqrt(np.mean((solution.y[1] - data)**2))\n",
    "     \n",
    "for i in range(len(y)):\n",
    "    if str(y[i]) == \"nan\":\n",
    "        y[i]=0 \n",
    " \n",
    "confirmed =  y\n",
    "\n",
    "\n",
    "data = (confirmed)\n",
    " \n",
    "# Total de la poblacion\n",
    "N = 10000\n",
    "# Numero Inicial de Infectados\n",
    "I0 = 1\n",
    "# Numero de Recuperados\n",
    "R0 = 0\n",
    "# Todos los demás, S0, son susceptibles a la infección inicialmente.\n",
    "S0 = N - I0 - R0\n",
    "\n",
    "\n",
    "fxmin = minimize(fx, [0.001, 0.001], args=(data), method='L-BFGS-B', bounds=[(0.00000001, 0.4), (0.00000001, 0.4)])\n",
    "\n",
    "beta, gamma = fxmin.x\n",
    "\n",
    "\n",
    "\n",
    "beta *= N\n",
    "#gamma *= 100000 \n",
    "# Tasa de contacto, beta (nivel de repoductividad del virus) \n",
    "# La tasa de recuperación media, gamma,(1/días) Una persona se recupera en 15 dias.\n",
    "#beta, gamma = 0.589,0.045\n",
    "# Una cuadrícula de puntos de tiempo (en días)\n",
    "t = np.linspace(0, 200, 200)\n",
    "\n",
    "# Las ecuaciones diferenciales del modelo SIR..\n",
    "def deriv(y, t, N, beta, gamma):\n",
    "    S, I, R = y\n",
    "    dSdt = -beta * S * I / N \n",
    "    dIdt = beta * S * I / N - gamma * I\n",
    "    dRdt = gamma * I\n",
    "    return dSdt, dIdt, dRdt\n",
    "\n",
    "# Vector de condiciones iniciales\n",
    "y0 = S0, I0, R0\n",
    "# Integre las ecuaciones SIR en la cuadrícula de tiempo, t. A traves de la funcion odeint()\n",
    "ret = odeint(deriv, y0, t, args=(N, beta, gamma))\n",
    "S, I, R = ret.T # Obtenicion de resultados\n",
    "\n",
    "\n",
    "#  Trace los datos en tres curvas separadas para S (t), I (t) y R (t)\n",
    "fig = plt.figure(facecolor='w')\n",
    "ax = fig.add_subplot(111,  axisbelow=True)\n",
    "ax.plot(t, S, 'b', alpha=0.5, lw=2, label='Susceptible de infeccion')\n",
    "ax.plot(t, I, 'r', alpha=0.5, lw=2, label='Infectados')\n",
    "ax.plot(t, R, 'g', alpha=0.5, lw=2, label='Recuperados')\n",
    "ax.plot(range(len(confirmed)), confirmed, 'c', alpha=0.1, lw=2, label='Confirmados Reales') \n",
    "ax.set_xlabel('Tiempo en dias')\n",
    "ax.set_ylabel('Numero de Personas')\n",
    "ax.set_ylim(0,N*1.2)\n",
    "ax.yaxis.set_tick_params(length=0)\n",
    "ax.xaxis.set_tick_params(length=0)\n",
    "ax.grid(b=True, which='major', c='w', lw=2, ls='-')\n",
    "legend = ax.legend()\n",
    "legend.get_frame().set_alpha(0.5)\n",
    "for spine in ('top', 'right', 'bottom', 'left'):\n",
    "    ax.spines[spine].set_visible(False)\n",
    "elapsed_time = (time() - start_time)/60\n",
    "plt.title(\"Ecuador\\nAutor: Hernan Leon\")\n",
    "plt.show()\n",
    "\n",
    "fig.savefig(f\"Ecuador {datetime.now()}.png\")\n",
    "\n",
    "#Ro = beta/gamma\n",
    "#print(Ro)\n",
    "print(\"Beta: %0.10f \" % beta)\n",
    "print(\"Gamma: %0.10f \" % gamma)\n",
    "\n",
    "print(\"Elapsed time: %0.10f seconds.\" % elapsed_time)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## 3. Retroceder un semana y comparar el modelo matematico vs probabilidad vs reales. Solo cargan los datos para generar los modelos menos 7 dias."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 282,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Actualizar los datos (URL)\n",
    "url = 'https://covid.ourworldindata.org/data/ecdc/new_cases.csv'\n",
    "df = pd.read_csv(url)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 283,
   "metadata": {},
   "outputs": [],
   "source": [
    "##REcupero los nuevos casos\n",
    "\n",
    "df = df.loc[:,['date','Ecuador']] #Selecciono las columnas de analasis\n",
    "# Expresar las fechas en numero de dias desde el 01 Enero\n",
    "FMT = '%Y-%m-%d'\n",
    "date = df['date']\n",
    "df['date'] = date.map(lambda x : (datetime.strptime(x, FMT) - datetime.strptime(\"2020-01-01\", FMT)).days)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 284,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "101.0\n",
      "191.27906976744185\n"
     ]
    }
   ],
   "source": [
    "##Calculo la mediana\n",
    "filtro = df[\"Ecuador\"][61:61+48] # Filtro los datos que se empezo a tener casos\n",
    "#Obtenemos la mediana\n",
    "media = filtro.mean()\n",
    "mediana = filtro.median()\n",
    "print(mediana)\n",
    "print(media)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 285,
   "metadata": {},
   "outputs": [],
   "source": [
    "url = 'https://covid.ourworldindata.org/data/ecdc/total_cases.csv'\n",
    "df_t = pd.read_csv(url)\n",
    "FMT = '%Y-%m-%d'\n",
    "date = df_t['date']\n",
    "df_t['date'] = date.map(lambda x : (datetime.strptime(x, FMT) - datetime.strptime(\"2020-01-01\", FMT)).days)\n",
    "df_t = df_t.loc[:,['date','Ecuador']] #Selecciono las columnas de analasis\n",
    "y = list(df_t.iloc [:, 1]) # Total casos\n",
    "x = list(df_t.iloc [:, 0]) # Dias\n",
    "\n",
    "##limpiar nan\n",
    "for i in range(len(y)):\n",
    "    if str(y[i]) == \"nan\":\n",
    "        y[i]=0 \n",
    "\n",
    "x = x[61:len(x)-7]\n",
    "y = y[61:len(y)-7]\n",
    "###\n",
    "# Quiero predecir cuántos \"Casos\" voy a obtener de aqui a 7 dias(hoy).\n",
    "for i in range(x[-1], x[-1]+7):\n",
    "    x.append(i)\n",
    "    y.append(int(y[-1] + mediana))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 289,
   "metadata": {},
   "outputs": [
    {
     "name": "stderr",
     "output_type": "stream",
     "text": [
      "/Users/erleo15/anaconda3/anaconda3/envs/simulacion/lib/python3.8/site-packages/IPython/core/interactiveshell.py:3331: RankWarning: Polyfit may be poorly conditioned\n",
      "  exec(code_obj, self.user_global_ns, self.user_ns)\n"
     ]
    }
   ],
   "source": [
    "##Modelo Polinomial\n",
    "x_m = x[:]\n",
    "y_m = y[:]\n",
    "# Modelo polinomial\n",
    "grado = len(x)\n",
    "\n",
    "poli = pd.DataFrame(columns=('Días', 'Polinomial')) \n",
    "y_pol = np.poly1d(np.polyfit(x_m,y_m,grado))\n",
    "\n",
    "# Asignación de valores a la variable dependiente según la ecuación anterior\n",
    "for pred in x_m: \n",
    "    poli.loc[len(poli)] = [pred, y_pol(pred)]\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 291,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1080x1440 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "plt.figure(figsize=(15, 20))\n",
    "plt.plot(list(df_t.iloc [:, 0])[:116-7], list(df_t.iloc [:, 1])[:116-7],'b+',label=\"Datos Reales\")\n",
    "plt.plot( x, y,label = \" probabilidad\")\n",
    "plt.plot( x[len(x)-7:], y[len(y)-7:],label = \"Prediccion probabilidad\")\n",
    "plt.plot(poli.loc[:,'Días'], poli.loc[:,'Polinomial'], 'g', label='Modelo polinomial')\n",
    "plt.plot(poli.iloc[len(x)-7:,0], poli.iloc[len(x)-7:,1], 'r' , label='Modelo polinomial (Predicción)')\n",
    "plt.xlim([61,120])\n",
    "plt.ylim([-1,10000])\n",
    "plt.legend()\n",
    "plt.title(\"Autor: Hernan Leon\")\n",
    "plt.grid(True)\n",
    "plt.show() "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 292,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Dias</th>\n",
       "      <th>Polinomial</th>\n",
       "      <th>Probabilistico</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>1</td>\n",
       "      <td>18.034546</td>\n",
       "      <td>1.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2</td>\n",
       "      <td>-60.076416</td>\n",
       "      <td>6.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>3</td>\n",
       "      <td>62.949463</td>\n",
       "      <td>7.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4</td>\n",
       "      <td>49.430542</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>5</td>\n",
       "      <td>-20.794067</td>\n",
       "      <td>10.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6</td>\n",
       "      <td>-49.932129</td>\n",
       "      <td>13.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>7</td>\n",
       "      <td>-20.235718</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>8</td>\n",
       "      <td>30.874390</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>9</td>\n",
       "      <td>60.184937</td>\n",
       "      <td>14.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>10</td>\n",
       "      <td>49.881226</td>\n",
       "      <td>15.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>10</th>\n",
       "      <td>11</td>\n",
       "      <td>11.862427</td>\n",
       "      <td>17.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>11</th>\n",
       "      <td>12</td>\n",
       "      <td>-26.265503</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>12</th>\n",
       "      <td>13</td>\n",
       "      <td>-39.971802</td>\n",
       "      <td>0.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>13</th>\n",
       "      <td>14</td>\n",
       "      <td>-20.544067</td>\n",
       "      <td>23.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>15</td>\n",
       "      <td>23.181030</td>\n",
       "      <td>28.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>15</th>\n",
       "      <td>16</td>\n",
       "      <td>72.808716</td>\n",
       "      <td>37.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>16</th>\n",
       "      <td>17</td>\n",
       "      <td>112.793823</td>\n",
       "      <td>58.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>18</td>\n",
       "      <td>140.663818</td>\n",
       "      <td>111.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>19</td>\n",
       "      <td>170.259888</td>\n",
       "      <td>168.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>19</th>\n",
       "      <td>20</td>\n",
       "      <td>226.329712</td>\n",
       "      <td>199.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>20</th>\n",
       "      <td>21</td>\n",
       "      <td>332.995483</td>\n",
       "      <td>426.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>21</th>\n",
       "      <td>22</td>\n",
       "      <td>501.160889</td>\n",
       "      <td>532.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>22</th>\n",
       "      <td>23</td>\n",
       "      <td>720.661621</td>\n",
       "      <td>789.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>23</th>\n",
       "      <td>24</td>\n",
       "      <td>961.388672</td>\n",
       "      <td>981.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>24</th>\n",
       "      <td>25</td>\n",
       "      <td>1184.017578</td>\n",
       "      <td>1082.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>25</th>\n",
       "      <td>26</td>\n",
       "      <td>1356.647461</td>\n",
       "      <td>1211.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>26</th>\n",
       "      <td>27</td>\n",
       "      <td>1470.812622</td>\n",
       "      <td>1403.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>27</th>\n",
       "      <td>28</td>\n",
       "      <td>1549.148682</td>\n",
       "      <td>1627.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>28</th>\n",
       "      <td>29</td>\n",
       "      <td>1639.689087</td>\n",
       "      <td>1835.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>29</th>\n",
       "      <td>30</td>\n",
       "      <td>1796.808594</td>\n",
       "      <td>1890.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>30</th>\n",
       "      <td>31</td>\n",
       "      <td>2055.138306</td>\n",
       "      <td>1966.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>31</th>\n",
       "      <td>32</td>\n",
       "      <td>2407.824829</td>\n",
       "      <td>2302.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>32</th>\n",
       "      <td>33</td>\n",
       "      <td>2800.924927</td>\n",
       "      <td>2758.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>33</th>\n",
       "      <td>34</td>\n",
       "      <td>3151.637573</td>\n",
       "      <td>3163.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>34</th>\n",
       "      <td>35</td>\n",
       "      <td>3387.101685</td>\n",
       "      <td>3368.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>35</th>\n",
       "      <td>36</td>\n",
       "      <td>3489.513306</td>\n",
       "      <td>3465.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>36</th>\n",
       "      <td>37</td>\n",
       "      <td>3524.407593</td>\n",
       "      <td>3646.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>37</th>\n",
       "      <td>38</td>\n",
       "      <td>3630.309570</td>\n",
       "      <td>3747.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>38</th>\n",
       "      <td>39</td>\n",
       "      <td>3962.542114</td>\n",
       "      <td>3995.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>39</th>\n",
       "      <td>40</td>\n",
       "      <td>4607.846680</td>\n",
       "      <td>4450.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>40</th>\n",
       "      <td>41</td>\n",
       "      <td>5512.576172</td>\n",
       "      <td>4965.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>41</th>\n",
       "      <td>42</td>\n",
       "      <td>6474.715942</td>\n",
       "      <td>7161.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>42</th>\n",
       "      <td>43</td>\n",
       "      <td>7229.724365</td>\n",
       "      <td>7257.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>43</th>\n",
       "      <td>44</td>\n",
       "      <td>7604.063477</td>\n",
       "      <td>7466.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>44</th>\n",
       "      <td>45</td>\n",
       "      <td>7646.156128</td>\n",
       "      <td>7529.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>45</th>\n",
       "      <td>46</td>\n",
       "      <td>7617.937134</td>\n",
       "      <td>7603.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>46</th>\n",
       "      <td>47</td>\n",
       "      <td>7797.012939</td>\n",
       "      <td>7858.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>47</th>\n",
       "      <td>48</td>\n",
       "      <td>8206.868286</td>\n",
       "      <td>8225.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>48</th>\n",
       "      <td>49</td>\n",
       "      <td>8206.868286</td>\n",
       "      <td>8326.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>49</th>\n",
       "      <td>50</td>\n",
       "      <td>8554.059204</td>\n",
       "      <td>8427.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>50</th>\n",
       "      <td>51</td>\n",
       "      <td>8577.771240</td>\n",
       "      <td>8528.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>51</th>\n",
       "      <td>52</td>\n",
       "      <td>8514.651855</td>\n",
       "      <td>8629.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>52</th>\n",
       "      <td>53</td>\n",
       "      <td>8789.372803</td>\n",
       "      <td>8730.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>53</th>\n",
       "      <td>54</td>\n",
       "      <td>8813.153687</td>\n",
       "      <td>8831.0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>54</th>\n",
       "      <td>55</td>\n",
       "      <td>8930.828979</td>\n",
       "      <td>8932.0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "    Dias   Polinomial  Probabilistico\n",
       "0      1    18.034546             1.0\n",
       "1      2   -60.076416             6.0\n",
       "2      3    62.949463             7.0\n",
       "3      4    49.430542             0.0\n",
       "4      5   -20.794067            10.0\n",
       "5      6   -49.932129            13.0\n",
       "6      7   -20.235718             0.0\n",
       "7      8    30.874390             0.0\n",
       "8      9    60.184937            14.0\n",
       "9     10    49.881226            15.0\n",
       "10    11    11.862427            17.0\n",
       "11    12   -26.265503             0.0\n",
       "12    13   -39.971802             0.0\n",
       "13    14   -20.544067            23.0\n",
       "14    15    23.181030            28.0\n",
       "15    16    72.808716            37.0\n",
       "16    17   112.793823            58.0\n",
       "17    18   140.663818           111.0\n",
       "18    19   170.259888           168.0\n",
       "19    20   226.329712           199.0\n",
       "20    21   332.995483           426.0\n",
       "21    22   501.160889           532.0\n",
       "22    23   720.661621           789.0\n",
       "23    24   961.388672           981.0\n",
       "24    25  1184.017578          1082.0\n",
       "25    26  1356.647461          1211.0\n",
       "26    27  1470.812622          1403.0\n",
       "27    28  1549.148682          1627.0\n",
       "28    29  1639.689087          1835.0\n",
       "29    30  1796.808594          1890.0\n",
       "30    31  2055.138306          1966.0\n",
       "31    32  2407.824829          2302.0\n",
       "32    33  2800.924927          2758.0\n",
       "33    34  3151.637573          3163.0\n",
       "34    35  3387.101685          3368.0\n",
       "35    36  3489.513306          3465.0\n",
       "36    37  3524.407593          3646.0\n",
       "37    38  3630.309570          3747.0\n",
       "38    39  3962.542114          3995.0\n",
       "39    40  4607.846680          4450.0\n",
       "40    41  5512.576172          4965.0\n",
       "41    42  6474.715942          7161.0\n",
       "42    43  7229.724365          7257.0\n",
       "43    44  7604.063477          7466.0\n",
       "44    45  7646.156128          7529.0\n",
       "45    46  7617.937134          7603.0\n",
       "46    47  7797.012939          7858.0\n",
       "47    48  8206.868286          8225.0\n",
       "48    49  8206.868286          8326.0\n",
       "49    50  8554.059204          8427.0\n",
       "50    51  8577.771240          8528.0\n",
       "51    52  8514.651855          8629.0\n",
       "52    53  8789.372803          8730.0\n",
       "53    54  8813.153687          8831.0\n",
       "54    55  8930.828979          8932.0"
      ]
     },
     "execution_count": 292,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##Variables de correlacion\n",
    "\n",
    "#dfd = pd.DataFrame((zip(y),zip(y),zip(y)),columns=('dias', 'matematico','probabilistico'))\n",
    "\n",
    "y= np.array(y)\n",
    "x= np.array(x) \n",
    "df_dias = pd.DataFrame(range(1,len(x)+1),columns = [\"Dias\"])\n",
    "#modeloPol.loc[:,'Modelo Polinomial']\n",
    "df_pol = pd.DataFrame(poli.loc[:,'Polinomial'])\n",
    "df_prob = pd.DataFrame(y, columns = [\"Probabilistico\"])\n",
    "dfd = pd.concat([df_dias, df_pol, df_prob], axis=1) \n",
    "dfd"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 293,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>Dias</th>\n",
       "      <th>Polinomial</th>\n",
       "      <th>Probabilistico</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>Dias</th>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.932697</td>\n",
       "      <td>0.931850</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Polinomial</th>\n",
       "      <td>0.932697</td>\n",
       "      <td>1.000000</td>\n",
       "      <td>0.999096</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>Probabilistico</th>\n",
       "      <td>0.931850</td>\n",
       "      <td>0.999096</td>\n",
       "      <td>1.000000</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "                    Dias  Polinomial  Probabilistico\n",
       "Dias            1.000000    0.932697        0.931850\n",
       "Polinomial      0.932697    1.000000        0.999096\n",
       "Probabilistico  0.931850    0.999096        1.000000"
      ]
     },
     "execution_count": 293,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##Calculamos la correlacion para las variables\n",
    "correlacion = dfd.corr(method=\"pearson\")\n",
    "correlacion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 294,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.image.AxesImage at 0x120d53cd0>"
      ]
     },
     "execution_count": 294,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 288x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.matshow(correlacion)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 295,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[<matplotlib.lines.Line2D at 0x121a6e1f0>]"
      ]
     },
     "execution_count": 295,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(dfd[\"Polinomial\"],dfd[\"Dias\"],\"r+\")\n",
    "plt.plot(dfd[\"Probabilistico\"],dfd[\"Dias\"],\"b+\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Analisis\n",
    "\n",
    "> En los modelos matematicos y probabilisticos siempre sera necesario contar con datos historicos de una situacion debido a que se basan en estos para predecir como se comportara esta situacion en un futuro ya sea cercano o lejano. \n",
    "> Los modelos probabilisticos hacen uso de variables estadisticas mientras que los matematicos hacen uso de funciones matematicas para su construccion. Tanto el modelo matematico como el probabilistico tienen sus ventajas o desventajas respecto a la prediccion de una situacion. Es cosa de cada individuo hacer uso de uno de ellos.\n",
    "\n",
    "## Conclusiones\n",
    "\n",
    "> En conclusion se puede ver que tanto el modelo matematico como el modelo probabilistico se ajustan de manera mas acertada a los datos, y tambien sus predicciones son similares.\n",
    "\n",
    "## Criterio personal (politico, economico y  social de la situacion)\n",
    "\n",
    "> Politico: La situacion politica del pais sigue generando inestabilidad en el pais, lo que engrava la enfermedad en toda la region. \n",
    "\n",
    "> Economico: la economia se ha visto afectada debido a que las personas tienen que aislarse y no existe un consumo del lo producido por las empresa, estas son una de las consecuencias que ha traido consigo esta pandemia.\n",
    "\n",
    "> Social: La sociedad esta cambiando respecto a unos meses atras, debido a esta pandemia. El virus al propagarse rapidamente y que las predicciones de los modelos no son alentadores han hecho que el distanciamiento social sea devastador para las personas.\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Referencias\n",
    "\n",
    "- https://www.researchgate.net/publication/340092755_Infeccion_del_Covid-19_en_Colombia_Una_comparacion_de_modelos_logisticos_y_exponenciales_aplicados_a_la_infeccion_por_el_virus_en_Colombia\n",
    "\n",
    "- https://www.aprendemachinelearning.com/regresion-lineal-en-espanol-con-python/"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.2"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
